name: Release

on:
  push:
    branches: [master]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: Create PR or Deploy to Pages
    runs-on: ubuntu-latest
    outputs:
      hasChangesets: ${{ steps.changesets.outputs.hasChangesets }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - run: pnpm install
      - run: pnpm build
        env:
          BASE_URL: ${{ steps.pages.outputs.base_url }}
          NODE_ENV: production
      - name: Create Version PR or Deploy to Pages
        id: changesets
        uses: changesets/action@v1.4.5
        with:
          commit: "chore(release): version packages"
          title: "chore(release): version packages"
          version: node .github/changeset-version.cjs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production
      - name: Upload artifact
        if: steps.changesets.outputs.hasChangesets == 'false'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./release

  deploy:
    if: needs.build.outputs.hasChangesets == 'false'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
